#encoding:utf-8
import tornado.ioloop
import tornado.web
import tornado.httpserver
import tornado.options
from tornado.netutil import bind_sockets
import hashlib
from lxml import etree
import time
import urllib
import urllib2
import json
import socket

from tornado.options import define, options
define("port", default=80, help="run on the given port", type=int)
global access

def searchMusic(text):
    data = {'s':text,'offset':0,'limit':1, 'type':1}
    body = urllib.urlencode(data)
    header = {'Cookie':'appver=1.5.0.75771','Referer':'http://music.163.com/'}
    url = 'http://music.163.com/api/search/pc'
    req = urllib2.Request(url=url,data=body,headers=header)
    res_data = urllib2.urlopen(req)
    return res_data

def getMediaId(url):
    global access
    thumb_conn = urllib2.urlopen(url)
    file_name = './tmp.jpg'
    file = open(file_name, 'wb')
    file.write(thumb_conn.read())
    file.close()
    print access
    upload_url = 'https://api.weixin.qq.com/cgi-bin/media/upload?access_token='+access+'&type=thumb'
    file_upload = {'image': open('./tmp.jpg', 'rb')}
    postdata = urllib.urlencode(file_upload)
    req = urllib2.Request(url=upload_url, data=postdata)
    res = urllib2.urlopen(req)
    res_data = json.load(res)
    print res_data
    mediaId = res_data['media_id']
    return


class MainHandler(tornado.web.RequestHandler):
    def get(self):
        # 获取输入参数
        signature = self.get_argument('signature')
        timestamp = self.get_argument('timestamp')
        nonce = self.get_argument('nonce')
        echostr = self.get_argument('echostr')
        # 自己的token
        token = "matthewzheng"  # 这里改写你在微信公众平台里输入的token
        # 字典序排序
        list = [token, timestamp, nonce]
        list.sort()
        sha1 = hashlib.sha1()
        map(sha1.update, list)
        hashcode = sha1.hexdigest()
        # sha1加密算法
        # 如果是来自微信的请求，则回复echostr
        if hashcode == signature:
            self.write(echostr)
	
    def post(self):
        global access

        print 'receive'
        str_xml = self.request.body  # 获得post来的数据
        xml = etree.fromstring(str_xml)  # 进行XML解析
        content = xml.find("Content").text  # 获得用户所输入的内容
        msgType = xml.find("MsgType").text
        fromUser = xml.find("FromUserName").text
        toUser = xml.find("ToUserName").text

        res = searchMusic(content)
        content_json = json.load(res)
        songs = content_json['result']['songs']
        if len(songs) == 0:
            return self.render('reply_text.xml', toUser = fromUser,  fromUser = toUser, createTime = int(time.time()), content = u"找不到你需要的音乐:" + content)
        song = songs[0]
        music_title = song['bMusic']['name']
        music_url = "http://weixincourse-weixincourse.stor.sinaapp.com/mysongs.mp3"
        mediaId = getMediaId(song['artists'][0]['picUrl'])
        #music_url = song['mp3Url']
	    # print music_title,music_url
        return self.render('reply_music.xml', toUser = fromUser,  fromUser = toUser, createTime = int(time.time()), TITLE = music_title, DESCRIPTION = 'haha', MUSIC_Url = music_url, HQ_MUSIC_Url = music_url, media_id = mediaId)

application = tornado.web.Application([
    (r"/weixin", MainHandler),
])

if __name__ == "__main__":
    global access
    tornado.options.parse_command_line()
    httpserver = tornado.httpserver.HTTPServer(application)
    sockets = bind_sockets(options.port, address='', reuse_port=True)
    httpserver.add_sockets(sockets)

    access_url = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=wx10276c92dc527545&secret=bc55bfd4a449ca3a5b9b3ffc9a95d244'
    req = urllib2.Request(url = access_url)
    res = urllib2.urlopen(req)
    content_access = json.load(res)
    access = content_access['access_token']
    time = content_access['expires_in']
    print access
    tornado.ioloop.IOLoop.instance().start()



